https://www.youtube.com/watch?v=DniiviK8QVo&list=PLCMvV-acWe2C3ruTp6kzHU7FqlErsl2nR&index=3
/************************************Создание новой темы*****************************************************************************/
wp acc: goshgeusman@gmail.com
   pas: DJHgfh1GHBvyt
ВОРДПРЕССпароль1ПРИДУМАЛмне

FTP IP	ftp://45.84.204.220
Имя хоста FTP	ftp://jegoteam.com
Имя пользователя FTP	u472674736
FTP порт	21
Папка для загрузки файлов	public_html

в файле style.css прописывается свойства темы 
скопировал все файлы старого сайта в папку assets
из index.html всё сохраняешь в index.php
из index.html вырезается <head> ... </head> и <header> ... </header> и вставляется в header.php
	Примечание - это может быть не обязательно содержимое тэга header, это может быть и aside - основная мысль в том, что это
	навигационное меню, которое должно повторятся в каждой странице, поэтому его выносят.
На месте где раньше был <head> и  <header> пишется код php (ты можешь смотреть подскази на сайте wp-kama[get-header])
	<?php 
	  get_header();
	?>
	на сайте может быть несколько хедеров, допустим у тебя есть ещё хедер для постов(header-post.php), тогда ты должен будешь исползьова
	функцию следующим образом get_header('post') 
С футером нужно провернуть те же гействия - вырезаем футер и вставляем в footer.php, а на месте разметки оставляем функция 
	<?php
	  get_footer();
	?>

Для подключения стилей нужно лезть в файл functions.php и с помощью функции wp_enqueue_style подключать нужные стили
	первый аргумент этой функции - указывает специфику стилей, хранящихся в указываемом файле, название можешь давать какое захочешь.
	второй аргумент - принимает абсолютный путь к файлу стилей
	get_template_directory_uri() - метод возвращающий полный путь к папке с темой (в данном случае : C:\xampp\htdocs\wordpress\wp-content\themes\jopnaya-jopa)
	
	Далее мы вызываем эту функцию с помощью add_action
	show_admin_bar(false); - скрывает панель одмина
	
	после этого можно удалить в header.php все упоминания о index.css (link href="index.css")
	Вместо этого нужно будет прописать функцию <?php wp_head(); ?>

скрипты мы подключаем в footer.php по аналогии с header.php, с той лишь разницей, что нужно будет прописать 
	дополнительную функцию wp_footer.php() - фукнция для вызова одноимённого хука для подключения скриптов 

/***********************************************Подключение новых страниц******************************************/

Если сайт много страничный, то ссылки на другие страницы, которые ты выстроил в нём - не будут работать.
Чтобы всё заработало как надо нужно:
	1)Создать страницу в самом wordpress (страницы -> создать новую -> в заголовке пишешь "нужное название страницы")
	2)Копируем страницу (допустим blog.html) рядом с index.php и делаем с ней всё то, что мы делали с index.html - 
		а)меняем расширение на php
		б)убираем хедер и футер, вместо них подключенм <?php get_header()?> и <?php get_footer()?>
		в)в начале файла добавляем комментарий - <?php /**Template Name: "название шоблона" */ ?> этот комментари 
			заставляет одминку думать, что это шаблон и поэтому добавляет раздел шаблона в админке, когда управляешь этой страницей.

Теперь касательно навиГЕЙшон - создавая новую страницу в одминке - ты можешь посмотреть её адресс, тебе нужно его скопировать
	и поменять гиперрссылку на той ссылке, которая ведёт на эту страницу.
		
************************** Добавление кастомизируемых полей в WP(занятие номер 3) **********************************

--- Создание кастомизируемых полей по уже созданным шаблонам в pods
Pods - Custom Content Types and Fields - данный плюгин - повзолит создавать поля, которые ты сможешь костомизировать
	Допустим изменять текст заголовка через одминку.
После утсновки плюгина - заходишь в него, нажимаешь добавить новую(add new) - разжирить уже имеющуюся(extend existing)- 
	заполняешь post types(pages etc), тип выбираешь страницы (pages), в этой странице добавляешь новое поле
	Заполняешь данные и сохраняешь
Теперь переходишь в страницу, нажимаешь - изменить дерьмо(страницу), теперь у тебя есть нужные поля, но оно не отображается пока что.
	Для этого нужно залезть в код и удалить текст в нужном теге, заменив на функцию 
	<?php echo get_post_meta(get_the_ID(), 'descr' , true); ?>
		get_the_ID() - возвращает id страницы
		descr - название поля, которое ты заполнил в pods-custom content types and fields
		true - значит массив обрабатываться не будет 	

---Создание и разворачивание pod'a : Если нужно создать управление для целого блока (c 7.07 до 13.00 минут на видео), например для массива карточек преимуществ, то нужно опять зайти в pods
	выбрать - создать новую - создаёшь  новый под - это значит, ты создаёшь шаблон блока, допустим, список карточек преимуществ
	при правильной настройке - ты можешь добавлять этот шаблон в любом месте и даже менять текст там.
	Итак создаёшь новый pod ( add new - create new) - Type: Custom Post Type (like Posts or Pages), Singular Label: "insert name", Plural Label: "insert name во множественном числе" .
	Ещё один момент - нужно зайти во вкладку advanced options найти подразделение поддержка(supprots) и поставить пункт Featured Image(миниатюра записи) [после этого появляется раздел меню в поде - миниатюра записи]	
После этого можно сохранить и в панели администрирования должна появиться  новая консоль с названием, которым
	ты дал pod'у (cards)- заходи в неё - добавляй новую (карточку)
	В названии указываешь название (карточки) в описании - описание . и картинку(про это чуть позже, вначале не получится). После нажимай опубликовать.
	Чтобы данный pod отображался нужно в конец functions.php  добавить следующий кад:
	add_theme_support('post-thumbnails');
	add_theme_support('post-thumbnails', array('название твоего pod'a в единственном числе - card') );

	Теперь нужно вставить код в страницу page-blog.php, чтобы эти pod'ы (карточки) подтягивались.
	// параметры по умолчанию
	<?php
	$posts = get_posts( array(
		'numberposts' => 5,
		'category'    => 0,
		'orderby'     => 'date',
		'order'       => 'DESC',
		'include'     => array(),
		'exclude'     => array(),
		'meta_key'    => '',
		'meta_value'  =>'',
		'post_type'   => 'post',
		'suppress_filters' => true, // подавление работы фильтров изменения SQL запроса
	) );

	foreach( $posts as $post ){
		setup_postdata($post);
		// формат вывода the_title() ...
	}
	wp_reset_postdata(); // сброс
	?>

	в графе post_type нужно будет прописать название своего pod'а в единственном чысле (card)
	в графе numberposts - нужно прописать -1, это значит, что не будет ограничений на количество карточек, которые ты можешь вызвать.
	в графе orderby - можно оставить date, тогда сортировка(выкладывание их на сайт) работ будет происходит по дате их создания, ты можешь поставить значение ASC, тогда в начале будут более старые работы.
	После этого нужно в цикл forEach, после функции setup_postdata($post) прописать нужную вёрстку, ОБОРНУТУЮ В ?>тут верстка<?php 
	С этих пор этот pod будет в на странице, теперь нужно настроить вывод корректного текста, как ты делал в начале работы с плюгэном pods
	в месте названия карточки(поста/pods) нужно вставить функцию <?php the_title() ?>, ну а в месте описания 
	<?php the_content(); ?>
	Чтобы вставлять картинку, нужно вместо адресса ссылки вставить следующую функшину : 
	src=<?php echo get_the_post_thumbnail_url() ?>

	Если the_title() и the_content() - тебе мало и ты хочешь выводить дополнительные поля, то продётся использовать <?php get_post_meta(get_the_ID(), 'nameOfPod', true).
	Для этого нужно в панели администрирования в PODS выбрать нужный pod и добавить поле - 

/*************************************************************(урок №4) **********************************************************************************************************/

---Создание страницы по шамболну(c 1-й минуты). В админке заходишь в  страницы, создаёшь новую, 
	на странице редактирования новой страницы пишешь заголовок, в правой чисти экрана будет панель настроек, если её нет, то нажми шестерню сверху.
	В этой панели можно выбрать шоблон, из тех что ты уже создал, когда натягивал верстку на страницы(ты писал Template Name: "название шоблона" ).
	Выбираешь нужный тебе шаблон и всё.

---Чтобы поменять изображение страницы через thumbnail(миниатюру)(4я минута) нужно добавить в меню редактирования страницы ты можешь выбрать пункт в настройка с права - 
	"изображения страницы" - выбираешь нужное изображение. 
	Затем  находишь в верстке нужный img и заменяешь ему ссылку на нужную функцию: <img src=<?php echo get_the_post_thumbnail_url() ?> >

---Сделать для страницы отдельный хедер
	Для этого нужно создать копию header.php и назвать ... допустим header-contactus.php, далее в этой версии хедера нужно внести нужные изменения в верстке.
	Теперь нужно странице, или шаблоне добавляешь в функцию get_header() название нужного хедера на, получается - get_header('contactus');

---Использование дополнительных полей в pods (не только the_content() и the_titile()) (вроде с 8й минуты)
	Для этого нужно зайти в PODS, выбрать нужный pod или создать новый.
	В выбранном pod'е добавляешь новое поле и даёшь ему название, сохраняешь pod.
	Теперь, в админке выбираешь этот pod, и заполняешь дополнительные поля. Сохраняешь pod.
	Заходишь в вёрстку нужной тебе страницы и разворачиваешь там нужный pod, (см урок 3)
	и добавляешь в нужные места следующий кусочек кода: 	<?php echo get_post_meta(get_the_ID(), 'название твоего дополнительного поля' , true); ?>
	Как ты навернео уже заметил - вызов дополнительных полей, почти полностью идентичен вызову кастомных уже существующих полей.

---Если нужно вывести изображение, непредусметренное в разметке до этого. (примерно с 10-й минуты)
	Заходишь в PODS и выбираешь тебе нужный, создаёшь дополнительное указываешь имя, но в поле "ТИП" указать что это изображение/video сохраняешь pod
	ВЫходишь в одминку, выбираешь уже созданный pod(contact), и указываешь в нём в дополнительном поле - картинку(contact-image).
	Теперь нужно залесть в верстку, где у тебя уже развёрнут код данного pod и в нужном месте, где тебе нужно установить картинку
	прописываешь следущий код : 
	<?php 
		$photo = get_post_meta(get_the_ID(), 'contact-image' , true);
	 ?>
	